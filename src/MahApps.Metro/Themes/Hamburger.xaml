<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mah="clr-namespace:MahApps.Metro.Controls"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:po="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    mc:Ignorable="po">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.Buttons.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.ListBox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.Scrollbars.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.TextBlock.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Themes/SplitView.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <system:Double x:Key="HamburgerSelectionIndicatorThemeWidth">6</system:Double>
    <system:Double x:Key="HamburgerSelectionIndicatorThemeHeight">24</system:Double>

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    <Style x:Key="MahApps.Styles.Hamburger.Button"
           BasedOn="{StaticResource MahApps.Styles.Button.Chromeless}"
           TargetType="{x:Type Button}">
        <Setter Property="Background"
                Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Margin"
                Value="0" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid Background="Transparent">
                        <Grid x:Name="PART_Background"
                              Background="{TemplateBinding Background}"
                              Opacity="0" />
                        <ContentPresenter x:Name="PART_ContentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="{TemplateBinding mah:ControlsHelper.RecognizesAccessKey}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="PART_Background"
                                    Property="Opacity"
                                    Value="0.3" />
                            <Setter TargetName="PART_ContentPresenter"
                                    Property="Opacity"
                                    Value="1" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="False">
                            <Setter TargetName="PART_Background"
                                    Property="Opacity"
                                    Value="0" />
                            <Setter TargetName="PART_ContentPresenter"
                                    Property="Opacity"
                                    Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Foreground"
                                    Value="#ADADAD" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
    </Style>

    <QuinticEase x:Key="ScrollBarEaseInOut"
                 EasingMode="EaseInOut"
                 po:Freeze="true" />

    <Style x:Key="MahApps.Styles.Hamburger.ScrollViewer"
           BasedOn="{StaticResource MahApps.Styles.ScrollViewer}"
           TargetType="{x:Type ScrollViewer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid"
                          Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="leftColumn"
                                              Width="*" />
                            <ColumnDefinition x:Name="rightColumn"
                                              Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                Grid.Row="0"
                                                Grid.Column="0"
                                                Margin="{TemplateBinding Padding}"
                                                CanContentScroll="{TemplateBinding CanContentScroll}"
                                                CanHorizontallyScroll="False"
                                                CanVerticallyScroll="False"
                                                Content="{TemplateBinding Content}"
                                                ContentTemplate="{TemplateBinding ContentTemplate}" />
                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                   Grid.Row="0"
                                   Grid.Column="0"
                                   Grid.ColumnSpan="2"
                                   HorizontalAlignment="Right"
                                   AutomationProperties.AutomationId="VerticalScrollBar"
                                   Cursor="Arrow"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   Minimum="0"
                                   Opacity="0"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        <ScrollBar x:Name="PART_HorizontalScrollBar"
                                   Grid.Row="0"
                                   Grid.RowSpan="2"
                                   Grid.Column="0"
                                   VerticalAlignment="Bottom"
                                   AutomationProperties.AutomationId="HorizontalScrollBar"
                                   Cursor="Arrow"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   Minimum="0"
                                   Opacity="0"
                                   Orientation="Horizontal"
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                   Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="mah:ScrollViewerHelper.VerticalScrollBarOnLeftSide"
                                 Value="True">
                            <Setter TargetName="PART_HorizontalScrollBar"
                                    Property="Grid.Column"
                                    Value="1" />
                            <Setter TargetName="PART_ScrollContentPresenter"
                                    Property="Grid.Column"
                                    Value="1" />
                            <Setter TargetName="PART_VerticalScrollBar"
                                    Property="HorizontalAlignment"
                                    Value="Left" />
                            <Setter TargetName="leftColumn"
                                    Property="Width"
                                    Value="Auto" />
                            <Setter TargetName="rightColumn"
                                    Property="Width"
                                    Value="*" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsVisible}"
                                           Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}"
                                           Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ComputedVerticalScrollBarVisibility}"
                                           Value="Visible" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type mah:SplitView}}, Path=IsPaneOpen}"
                                           Value="True" />
                            </MultiDataTrigger.Conditions>
                            <TriggerBase.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation EasingFunction="{StaticResource ScrollBarEaseInOut}"
                                                         Storyboard.TargetName="PART_VerticalScrollBar"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0:0:0.2" />
                                        <DoubleAnimation EasingFunction="{StaticResource ScrollBarEaseInOut}"
                                                         Storyboard.TargetName="PART_HorizontalScrollBar"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </TriggerBase.EnterActions>
                            <TriggerBase.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation BeginTime="0:0:1"
                                                         EasingFunction="{StaticResource ScrollBarEaseInOut}"
                                                         Storyboard.TargetName="PART_VerticalScrollBar"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0"
                                                         Duration="0:0:0.5" />
                                        <DoubleAnimation BeginTime="0:0:1"
                                                         EasingFunction="{StaticResource ScrollBarEaseInOut}"
                                                         Storyboard.TargetName="PART_HorizontalScrollBar"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0"
                                                         Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </TriggerBase.ExitActions>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="MahApps.Templates.HamburgerMenuItem.FocusVisual">
        <Rectangle SnapsToDevicePixels="True"
                   Stroke="Black"
                   StrokeThickness="2"
                   UseLayoutRounding="True" />
    </ControlTemplate>

    <Style x:Key="MahApps.Styles.Hamburger.ListBoxItemBase"
           BasedOn="{StaticResource MahApps.Styles.ListBoxItem}"
           TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Foreground"
                Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}, Path=Foreground, Mode=OneWay}" />
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="Margin"
                Value="0" />
        <Setter Property="MinHeight"
                Value="0" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="VerticalContentAlignment"
                Value="Stretch" />
    </Style>

    <Style x:Key="MahApps.Styles.Hamburger.ListBoxItem.MenuItem"
           BasedOn="{StaticResource MahApps.Styles.Hamburger.ListBoxItemBase}"
           TargetType="{x:Type ListBoxItem}">
        <Setter Property="FocusVisualStyle"
                Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type mah:Hamburger}}, Path=ItemFocusVisualStyle, Mode=OneWay, FallbackValue={x:Null}}" />
        <Setter Property="IsTabStop"
                Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type mah:Hamburger}}, Path=IsTabStop, Mode=OneWay, FallbackValue=True}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid x:Name="RootGrid"
                          Background="Transparent"
                          RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <mah:ClipBorder x:Name="Background"
                                        Background="{TemplateBinding Background}"
                                        CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                        <mah:ClipBorder x:Name="Border"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <Grid>
                                <Grid HorizontalAlignment="Left"
                                      VerticalAlignment="Center"
                                      Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type mah:Hamburger}}, Path=ShowSelectionIndicator, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <Rectangle x:Name="SelectionIndicator"
                                               Width="{DynamicResource HamburgerSelectionIndicatorThemeWidth}"
                                               Height="{DynamicResource HamburgerSelectionIndicatorThemeHeight}"
                                               Fill="{TemplateBinding Foreground}"
                                               Focusable="False"
                                               Opacity="0.0" />
                                </Grid>
                                <ContentPresenter x:Name="ContentPresenter"
                                                  Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </mah:ClipBorder>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected"
                                 Value="True">
                            <Setter TargetName="Background"
                                    Property="Background"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.SelectedBackgroundBrush), Mode=OneWay}" />
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.SelectedBorderBrush), Mode=OneWay}" />
                            <Setter TargetName="ContentPresenter"
                                    Property="TextElement.Foreground"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.SelectedForegroundBrush), Mode=OneWay}" />
                            <Setter TargetName="SelectionIndicator"
                                    Property="Fill"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.SelectedForegroundBrush), Mode=OneWay}" />
                            <Setter TargetName="SelectionIndicator"
                                    Property="Opacity"
                                    Value="1.0" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="True" />
                                <Condition Property="Selector.IsSelectionActive"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Background"
                                    Property="Background"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.ActiveSelectionBackgroundBrush), Mode=OneWay}" />
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.ActiveSelectionBorderBrush), Mode=OneWay}" />
                            <Setter TargetName="ContentPresenter"
                                    Property="TextElement.Foreground"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.ActiveSelectionForegroundBrush), Mode=OneWay}" />
                            <Setter TargetName="SelectionIndicator"
                                    Property="Fill"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.ActiveSelectionForegroundBrush), Mode=OneWay}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"
                                           Value="True" />
                                <Condition Property="IsSelected"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Background"
                                    Property="Background"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.HoverSelectedBackgroundBrush), Mode=OneWay}" />
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.HoverSelectedBorderBrush), Mode=OneWay}" />
                            <Setter TargetName="ContentPresenter"
                                    Property="TextElement.Foreground"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.HoverSelectedForegroundBrush), Mode=OneWay}" />
                            <Setter TargetName="SelectionIndicator"
                                    Property="Fill"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.HoverSelectedForegroundBrush), Mode=OneWay}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"
                                           Value="True" />
                                <Condition Property="IsSelected"
                                           Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Background"
                                    Property="Background"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.HoverBackgroundBrush), Mode=OneWay}" />
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.HoverBorderBrush), Mode=OneWay}" />
                            <Setter TargetName="ContentPresenter"
                                    Property="TextElement.Foreground"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.HoverForegroundBrush), Mode=OneWay}" />
                            <Setter TargetName="SelectionIndicator"
                                    Property="Fill"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.HoverForegroundBrush), Mode=OneWay}" />
                        </MultiTrigger>

                        <Trigger Property="mah:ItemHelper.IsMouseLeftButtonPressed"
                                 Value="True">
                            <Setter TargetName="Background"
                                    Property="Background"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.MouseLeftButtonPressedBackgroundBrush), Mode=OneWay}" />
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.MouseLeftButtonPressedBorderBrush), Mode=OneWay}" />
                            <Setter TargetName="ContentPresenter"
                                    Property="TextElement.Foreground"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.MouseLeftButtonPressedForegroundBrush), Mode=OneWay}" />
                            <Setter TargetName="SelectionIndicator"
                                    Property="Fill"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.MouseLeftButtonPressedForegroundBrush), Mode=OneWay}" />
                        </Trigger>
                        <Trigger Property="mah:ItemHelper.IsMouseRightButtonPressed"
                                 Value="True">
                            <Setter TargetName="Background"
                                    Property="Background"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.MouseRightButtonPressedBackgroundBrush), Mode=OneWay}" />
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.MouseRightButtonPressedBorderBrush), Mode=OneWay}" />
                            <Setter TargetName="ContentPresenter"
                                    Property="TextElement.Foreground"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.MouseRightButtonPressedForegroundBrush), Mode=OneWay}" />
                            <Setter TargetName="SelectionIndicator"
                                    Property="Fill"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.MouseRightButtonPressedForegroundBrush), Mode=OneWay}" />
                        </Trigger>

                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="Background"
                                    Property="Background"
                                    Value="{Binding RelativeSource={RelativeSource Self}, Path=(mah:ItemHelper.DisabledBackgroundBrush), Mode=OneWay}" />
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.DisabledBorderBrush), Mode=OneWay}" />
                            <Setter TargetName="ContentPresenter"
                                    Property="TextElement.Foreground"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.DisabledForegroundBrush), Mode=OneWay}" />
                            <Setter TargetName="RootGrid"
                                    Property="Background"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background, Mode=OneWay}" />
                            <Setter TargetName="SelectionIndicator"
                                    Property="Fill"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.DisabledForegroundBrush), Mode=OneWay}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled"
                                           Value="False" />
                                <Condition Property="IsSelected"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Background"
                                    Property="Background"
                                    Value="{Binding RelativeSource={RelativeSource Self}, Path=(mah:ItemHelper.DisabledSelectedBackgroundBrush), Mode=OneWay}" />
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.DisabledSelectedBorderBrush), Mode=OneWay}" />
                            <Setter TargetName="ContentPresenter"
                                    Property="TextElement.Foreground"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.DisabledSelectedForegroundBrush), Mode=OneWay}" />
                            <Setter TargetName="SelectionIndicator"
                                    Property="Fill"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.DisabledSelectedForegroundBrush), Mode=OneWay}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="mah:ItemHelper.HoverForegroundBrush"
                Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}, Path=Foreground, Mode=OneWay}" />
        <Setter Property="mah:ItemHelper.SelectedBackgroundBrush"
                Value="{DynamicResource MahApps.Brushes.Accent}" />
    </Style>

    <Style x:Key="MahApps.Styles.Hamburger.ListBoxItem.MenuItem.CreatorsUpdate"
           BasedOn="{StaticResource MahApps.Styles.Hamburger.ListBoxItem.MenuItem}"
           TargetType="{x:Type ListBoxItem}">
        <Setter Property="mah:ItemHelper.ActiveSelectionBackgroundBrush"
                Value="Transparent" />
        <Setter Property="mah:ItemHelper.ActiveSelectionForegroundBrush"
                Value="{DynamicResource MahApps.Brushes.AccentBase}" />
        <Setter Property="mah:ItemHelper.DisabledForegroundBrush"
                Value="{DynamicResource MahApps.Brushes.Gray}" />
        <Setter Property="mah:ItemHelper.DisabledSelectedBackgroundBrush"
                Value="Transparent" />
        <Setter Property="mah:ItemHelper.DisabledSelectedForegroundBrush"
                Value="{DynamicResource MahApps.Brushes.Gray}" />
        <Setter Property="mah:ItemHelper.HoverBackgroundBrush"
                Value="{DynamicResource MahApps.Brushes.Gray9}" />
        <Setter Property="mah:ItemHelper.HoverSelectedBackgroundBrush"
                Value="{DynamicResource MahApps.Brushes.Gray9}" />
        <Setter Property="mah:ItemHelper.HoverSelectedForegroundBrush"
                Value="{DynamicResource MahApps.Brushes.AccentBase}" />
        <Setter Property="mah:ItemHelper.SelectedBackgroundBrush"
                Value="Transparent" />
        <Setter Property="mah:ItemHelper.SelectedForegroundBrush"
                Value="{DynamicResource MahApps.Brushes.AccentBase}" />
    </Style>

    <Style x:Key="MahApps.Styles.Hamburger.TextBlock.MenuHeader"
           BasedOn="{StaticResource MahApps.Styles.TextBlock}"
           TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize"
                Value="16" />
        <Setter Property="FontWeight"
                Value="SemiBold" />
        <Setter Property="TextWrapping"
                Value="NoWrap" />
    </Style>

    <Style x:Key="MahApps.Styles.Hamburger.ListBoxItem.MenuHeader"
           BasedOn="{StaticResource MahApps.Styles.Hamburger.ListBoxItemBase}"
           TargetType="{x:Type ListBoxItem}">
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="Focusable"
                Value="False" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="IsHitTestVisible"
                Value="False" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="Padding"
                Value="8 8 0 8" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid Background="{TemplateBinding Background}"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <TextBlock x:Name="PART_HeaderText"
                                   Margin="{TemplateBinding Padding}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   Style="{DynamicResource MahApps.Styles.Hamburger.TextBlock.MenuHeader}"
                                   Text="{Binding Label}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsPaneOpen, RelativeSource={RelativeSource AncestorType=mah:Hamburger}}"
                                     Value="False">
                            <Setter TargetName="PART_HeaderText"
                                    Property="Visibility"
                                    Value="Collapsed" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MahApps.Styles.Hamburger.ListBoxItem.MenuSeparator"
           BasedOn="{StaticResource MahApps.Styles.Hamburger.ListBoxItemBase}"
           TargetType="{x:Type ListBoxItem}">
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="Focusable"
                Value="False" />
        <Setter Property="IsHitTestVisible"
                Value="False" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="Padding"
                Value="0 5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid Background="{TemplateBinding Background}"
                          RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}">
                        <Separator Margin="{TemplateBinding Padding}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MahApps.Styles.Hamburger.ListBox.Menu"
           BasedOn="{StaticResource MahApps.Styles.ListBox}"
           TargetType="{x:Type ListBox}">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="False" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Disabled" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ScrollViewer Padding="{TemplateBinding Padding}"
                                      mah:ScrollViewerHelper.VerticalScrollBarOnLeftSide="{TemplateBinding mah:ScrollViewerHelper.VerticalScrollBarOnLeftSide}"
                                      CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}"
                                      Focusable="False"
                                      HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      Style="{StaticResource MahApps.Styles.Hamburger.ScrollViewer}"
                                      VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping"
                                           Value="true" />
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                                           Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll"
                                    Value="false" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VirtualizingStackPanel.IsVirtualizing"
                Value="False" />
    </Style>

    <ControlTemplate x:Key="MahApps.Templates.Hamburger"
                     TargetType="{x:Type mah:Hamburger}">
        <Grid>
            <mah:SplitView x:Name="MainSplitView"
                           CanResizeOpenPane="{TemplateBinding CanResizeOpenPane}"
                           CompactPaneLength="{TemplateBinding CompactPaneLength}"
                           DisplayMode="{TemplateBinding DisplayMode}"
                           IsPaneOpen="{Binding IsPaneOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                           IsTabStop="False"
                           MaximumOpenPaneLength="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MaximumOpenPaneLength}"
                           MinimumOpenPaneLength="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MinimumOpenPaneLength}"
                           OpenPaneLength="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=OpenPaneLength, Mode=TwoWay}"
                           PaneBackground="{TemplateBinding PaneBackground}"
                           PaneForeground="{TemplateBinding PaneForeground}"
                           PanePlacement="{TemplateBinding PanePlacement}"
                           ResizeThumbStyle="{TemplateBinding ResizeThumbStyle}">
                <mah:SplitView.Pane>
                    <Grid x:Name="PaneGrid"
                          Margin="{TemplateBinding PaneMargin}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <DockPanel x:Name="PaneHeader"
                                   Grid.Row="0"
                                   Margin="{TemplateBinding PaneHeaderMargin}"
                                   LastChildFill="True">
                            <Grid x:Name="HamburgerButtonSpace"
                                  Width="{TemplateBinding CompactPaneLength}"
                                  Height="{TemplateBinding HamburgerHeight}"
                                  Margin="{TemplateBinding HamburgerMargin}"
                                  DockPanel.Dock="Left"
                                  Visibility="{TemplateBinding HamburgerVisibility}" />
                            <ContentControl x:Name="PaneHeaderContent"
                                            VerticalAlignment="Stretch"
                                            ContentTemplate="{TemplateBinding HamburgerMenuHeaderTemplate}"
                                            IsTabStop="False" />
                        </DockPanel>

                        <ListBox x:Name="PART_ButtonsList"
                                 Style="{DynamicResource MahApps.Styles.Hamburger.ListBox.Menu}"
                                 Grid.Row="1"
                                 Width="{TemplateBinding OpenPaneLength}"
                                 mah:ScrollViewerHelper.VerticalScrollBarOnLeftSide="{TemplateBinding VerticalScrollBarOnLeftSide}"
                                 AutomationProperties.Name="Menu items"
                                 Foreground="{TemplateBinding PaneForeground}"
                                 IsTextSearchEnabled="False"
                                 ItemContainerStyle="{TemplateBinding ItemContainerStyle}"
                                 ItemTemplate="{TemplateBinding ItemTemplate}"
                                 ItemTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                 ItemsSource="{TemplateBinding ItemsSource}"
                                 ScrollViewer.VerticalScrollBarVisibility="Auto"
                                 SelectedIndex="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedIndex, Mode=TwoWay}"
                                 SelectedItem="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedItem, Mode=TwoWay}"
                                 SelectionMode="Single"
                                 TabIndex="1" />
                        <ListBox x:Name="PART_OptionsList"
                                 Style="{DynamicResource MahApps.Styles.Hamburger.ListBox.Menu}"
                                 Grid.Row="2"
                                 Width="{TemplateBinding OpenPaneLength}"
                                 Margin="0 20 0 0"
                                 VerticalAlignment="Bottom"
                                 AutomationProperties.Name="Option items"
                                 Foreground="{TemplateBinding PaneForeground}"
                                 IsTextSearchEnabled="False"
                                 ItemContainerStyle="{TemplateBinding ItemContainerStyle}"
                                 ItemTemplate="{TemplateBinding OptionsItemTemplate}"
                                 ItemTemplateSelector="{TemplateBinding OptionsItemTemplateSelector}"
                                 ItemsSource="{TemplateBinding OptionsItemsSource}"
                                 ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                 SelectedIndex="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedOptionsIndex, Mode=TwoWay}"
                                 SelectedItem="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedOptionsItem, Mode=TwoWay}"
                                 SelectionMode="Extended"
                                 TabIndex="2" />
                    </Grid>
                </mah:SplitView.Pane>
                <mah:TransitioningContentControl x:Name="ContentPart"
                                                 Padding="{TemplateBinding Padding}"
                                                 HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                 VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                 AutomationProperties.Name="Content"
                                                 Content="{TemplateBinding Content}"
                                                 ContentTemplate="{TemplateBinding ContentTemplate}"
                                                 RestartTransitionOnContentChange="True"
                                                 SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                 Transition="{TemplateBinding ContentTransition}" />
            </mah:SplitView>
            <Button x:Name="PART_BurgerButton"
                    Width="{TemplateBinding CompactPaneLength}"
                    Height="{TemplateBinding HamburgerHeight}"
                    Margin="{TemplateBinding HamburgerMargin}"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                    AutomationProperties.AutomationId="HamburgerButton"
                    AutomationProperties.HelpText="{TemplateBinding HamburgerButtonHelpText}"
                    AutomationProperties.Name="{TemplateBinding HamburgerButtonName}"
                    ContentTemplate="{TemplateBinding HamburgerButtonTemplate}"
                    Foreground="{TemplateBinding PaneForeground}"
                    IsTabStop="{TemplateBinding IsTabStop}"
                    Style="{TemplateBinding HamburgerButtonStyle}"
                    TabIndex="0"
                    Visibility="{TemplateBinding HamburgerVisibility}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="PanePlacement"
                     Value="Right">
                <Setter TargetName="PART_BurgerButton"
                        Property="HorizontalAlignment"
                        Value="Right" />
                <Setter TargetName="HamburgerButtonSpace"
                        Property="DockPanel.Dock"
                        Value="Right" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="MahApps.Styles.Hamburger"
           TargetType="{x:Type mah:Hamburger}">
        <Setter Property="CanResizeOpenPane"
                Value="False" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="Focusable"
                Value="False" />
        <Setter Property="HamburgerButtonName"
                Value="HamburgerButton" />
        <Setter Property="HamburgerButtonStyle"
                Value="{DynamicResource MahApps.Styles.Hamburger.Button}" />
        <Setter Property="HamburgerButtonTemplate">
            <Setter.Value>
                <DataTemplate>
                    <!--  PackIconMaterial - Menu  -->
                    <mah:PathIcon Width="22"
                                  Height="22"
                                  Data="M3,6H21V8H3V6M3,11H21V13H3V11M3,16H21V18H3V16Z" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="HeaderItemContainerStyle"
                Value="{DynamicResource MahApps.Styles.Hamburger.ListBoxItem.MenuHeader}" />
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="ItemContainerStyle"
                Value="{DynamicResource MahApps.Styles.Hamburger.ListBoxItem.MenuItem}" />
        <Setter Property="KeyboardNavigation.ControlTabNavigation"
                Value="Local" />
        <Setter Property="KeyboardNavigation.DirectionalNavigation"
                Value="Local" />
        <Setter Property="KeyboardNavigation.TabNavigation"
                Value="Local" />
        <Setter Property="MaximumOpenPaneLength"
                Value="500" />
        <Setter Property="MinimumOpenPaneLength"
                Value="100" />
        <Setter Property="OptionsItemContainerStyle"
                Value="{DynamicResource MahApps.Styles.Hamburger.ListBoxItem.MenuItem}" />
        <Setter Property="PaneBackground"
                Value="{DynamicResource MahApps.HamburgerMenu.Pane.Background}" />
        <Setter Property="PaneForeground"
                Value="{DynamicResource MahApps.HamburgerMenu.Pane.Foreground}" />
        <Setter Property="PaneHeaderMargin"
                Value="0 0 0 8" />
        <Setter Property="PaneMargin"
                Value="0 0 0 8" />
        <Setter Property="ResizeThumbStyle"
                Value="{DynamicResource MahApps.Styles.MetroThumb.SplitView.Resize}" />
        <Setter Property="SeparatorItemContainerStyle"
                Value="{DynamicResource MahApps.Styles.Hamburger.ListBoxItem.MenuSeparator}" />
        <Setter Property="Template"
                Value="{DynamicResource MahApps.Templates.Hamburger}" />
        <Setter Property="VerticalContentAlignment"
                Value="Stretch" />
    </Style>

    <Style x:Key="MahApps.Styles.Hamburger.CreatorsUpdate"
           BasedOn="{StaticResource MahApps.Styles.Hamburger}"
           TargetType="{x:Type mah:Hamburger}">
        <Setter Property="ItemContainerStyle"
                Value="{DynamicResource MahApps.Styles.Hamburger.ListBoxItem.MenuItem.CreatorsUpdate}" />
        <Setter Property="OptionsItemContainerStyle"
                Value="{DynamicResource MahApps.Styles.Hamburger.ListBoxItem.MenuItem.CreatorsUpdate}" />
        <Setter Property="PaneBackground"
                Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
        <Setter Property="PaneForeground"
                Value="{DynamicResource MahApps.Brushes.Text}" />
        <Setter Property="ShowSelectionIndicator"
                Value="True" />
    </Style>

</ResourceDictionary>